# –ü–æ–¥–±–∏—Ä–∞–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥
results_df, best_threshold, best_f1 = find_optimal_auth_threshold(df_train)

print(f"üéØ –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥: {best_threshold}")
print(f"üèÜ –õ—É—á—à–∏–π F1-Score: {best_f1:.4f}")

# –í–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ–º
plot_threshold_analysis(results_df, best_threshold)

# –ü–æ—Å–º–æ—Ç—Ä–∏–º —Ç–æ–ø-5 –ø–æ—Ä–æ–≥–æ–≤
print("\nüìä –¢–æ–ø-5 –ø–æ—Ä–æ–≥–æ–≤ –ø–æ F1-Score:")
print(results_df.nlargest(5, 'f1_score').round(4))



# –ù–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
y_pred_train, metrics_train = manual_baseline_auth_times(
    df_train, best_threshold, 'AUTH_TIMES_x', 'TARGET_NEXT_MONTH'
)

# –ù–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (OOT)
y_pred_test, metrics_test = manual_baseline_auth_times(
    df_test, best_threshold, 'AUTH_TIMES_x', 'TARGET_NEXT_MONTH'
)

print("=" * 60)
print("üìà –°–†–ê–í–ù–ï–ù–ò–ï –¢–†–ï–ù–ò–†–û–í–û–ß–ù–´–• –ò –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•:")
print(f"Train F1: {metrics_train['F1-Score']:.4f}")
print(f"Test F1:  {metrics_test['F1-Score']:.4f}")
